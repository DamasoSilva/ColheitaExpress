version: '3.8'

services:
  # Banco de Dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: colheitaexpress_db
    environment:
      POSTGRES_DB: colheitaexpress
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - colheitaexpress_network
    restart: unless-stopped

  # Redis para Cache e Filas
  redis:
    image: redis:7-alpine
    container_name: colheitaexpress_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - colheitaexpress_network
    restart: unless-stopped

  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: colheitaexpress_backend
    environment:
      - DEBUG=False
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/colheitaexpress
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - colheitaexpress_network
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn ecommerce_saas.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  # Celery Worker para Tarefas Ass√≠ncronas
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: colheitaexpress_celery
    environment:
      - DEBUG=False
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/colheitaexpress
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    networks:
      - colheitaexpress_network
    restart: unless-stopped
    command: celery -A ecommerce_saas worker --loglevel=info

  # Celery Beat para Tarefas Agendadas
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: colheitaexpress_celery_beat
    environment:
      - DEBUG=False
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/colheitaexpress
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    networks:
      - colheitaexpress_network
    restart: unless-stopped
    command: celery -A ecommerce_saas beat --loglevel=info

  # Frontend React
  frontend:
    build:
      context: ./frontend/ecommerce-frontend
      dockerfile: Dockerfile
    container_name: colheitaexpress_frontend
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_APP_NAME=ColheitaExpress
    volumes:
      - ./frontend/ecommerce-frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - colheitaexpress_network
    restart: unless-stopped

  # Nginx Proxy Reverso
  nginx:
    image: nginx:alpine
    container_name: colheitaexpress_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - colheitaexpress_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  colheitaexpress_network:
    driver: bridge

