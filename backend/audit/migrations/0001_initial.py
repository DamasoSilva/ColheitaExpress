# Generated by Django 4.2.16 on 2025-09-25 13:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='ID do Log')),
                ('user_email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail do Usuário')),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP do Usuário')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('action', models.CharField(choices=[('create', 'Criação'), ('update', 'Atualização'), ('delete', 'Exclusão'), ('login', 'Login'), ('logout', 'Logout'), ('password_change', 'Alteração de Senha'), ('permission_change', 'Alteração de Permissão'), ('status_change', 'Alteração de Status'), ('payment', 'Pagamento'), ('refund', 'Reembolso'), ('delivery', 'Entrega'), ('stock_movement', 'Movimentação de Estoque'), ('export', 'Exportação'), ('import', 'Importação'), ('backup', 'Backup'), ('restore', 'Restauração'), ('api_call', 'Chamada de API'), ('error', 'Erro'), ('security_event', 'Evento de Segurança')], max_length=20, verbose_name='Ação')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('severity', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], default='low', max_length=10, verbose_name='Severidade')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ID do Objeto')),
                ('old_values', models.JSONField(blank=True, default=dict, verbose_name='Valores Antigos')),
                ('new_values', models.JSONField(blank=True, default=dict, verbose_name='Valores Novos')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadados')),
                ('session_id', models.CharField(blank=True, max_length=40, verbose_name='ID da Sessão')),
                ('request_id', models.UUIDField(blank=True, null=True, verbose_name='ID da Requisição')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
                ('module', models.CharField(blank=True, max_length=100, verbose_name='Módulo')),
                ('function', models.CharField(blank=True, max_length=100, verbose_name='Função')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name='Tipo de Conteúdo')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Log de Auditoria',
                'verbose_name_plural': 'Logs de Auditoria',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('performance', 'Performance'), ('security', 'Segurança'), ('usage', 'Uso'), ('error', 'Erro'), ('business', 'Negócio')], max_length=15, verbose_name='Tipo de Métrica')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('value', models.FloatField(verbose_name='Valor')),
                ('unit', models.CharField(blank=True, max_length=20, verbose_name='Unidade')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadados')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
            ],
            options={
                'verbose_name': 'Métrica do Sistema',
                'verbose_name_plural': 'Métricas do Sistema',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['metric_type', 'name', 'timestamp'], name='audit_syste_metric__a3cc66_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='ID do Evento')),
                ('event_type', models.CharField(choices=[('failed_login', 'Falha de Login'), ('multiple_failed_logins', 'Múltiplas Falhas de Login'), ('suspicious_activity', 'Atividade Suspeita'), ('unauthorized_access', 'Acesso Não Autorizado'), ('privilege_escalation', 'Escalação de Privilégios'), ('data_breach_attempt', 'Tentativa de Violação de Dados'), ('sql_injection', 'Tentativa de SQL Injection'), ('xss_attempt', 'Tentativa de XSS'), ('csrf_attempt', 'Tentativa de CSRF'), ('brute_force', 'Ataque de Força Bruta'), ('account_lockout', 'Bloqueio de Conta'), ('password_policy_violation', 'Violação de Política de Senha'), ('session_hijacking', 'Sequestro de Sessão'), ('malware_detected', 'Malware Detectado'), ('ddos_attempt', 'Tentativa de DDoS')], max_length=30, verbose_name='Tipo de Evento')),
                ('risk_level', models.CharField(choices=[('low', 'Baixo'), ('medium', 'Médio'), ('high', 'Alto'), ('critical', 'Crítico')], max_length=10, verbose_name='Nível de Risco')),
                ('status', models.CharField(choices=[('open', 'Aberto'), ('investigating', 'Investigando'), ('resolved', 'Resolvido'), ('false_positive', 'Falso Positivo'), ('ignored', 'Ignorado')], default='open', max_length=15, verbose_name='Status')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('source_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('request_method', models.CharField(blank=True, max_length=10, verbose_name='Método da Requisição')),
                ('request_url', models.URLField(blank=True, verbose_name='URL da Requisição')),
                ('request_data', models.JSONField(blank=True, default=dict, verbose_name='Dados da Requisição')),
                ('response_status', models.PositiveIntegerField(blank=True, null=True, verbose_name='Status da Resposta')),
                ('actions_taken', models.TextField(blank=True, verbose_name='Ações Tomadas')),
                ('blocked', models.BooleanField(default=False, verbose_name='Bloqueado')),
                ('detected_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Detectado em')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolvido em')),
                ('audit_logs', models.ManyToManyField(blank=True, to='audit.auditlog', verbose_name='Logs de Auditoria Relacionados')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Evento de Segurança',
                'verbose_name_plural': 'Eventos de Segurança',
                'ordering': ['-detected_at'],
                'indexes': [models.Index(fields=['event_type', 'detected_at'], name='audit_secur_event_t_616bfe_idx'), models.Index(fields=['risk_level', 'status'], name='audit_secur_risk_le_db114d_idx'), models.Index(fields=['source_ip', 'detected_at'], name='audit_secur_source__6ae86f_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='audit_audit_user_id_e8be02_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action', 'timestamp'], name='audit_audit_action_2a1328_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['severity', 'timestamp'], name='audit_audit_severit_4d72db_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['content_type', 'object_id'], name='audit_audit_content_4c2ead_idx'),
        ),
    ]
