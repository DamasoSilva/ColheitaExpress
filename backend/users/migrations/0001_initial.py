# Generated by Django 5.2.6 on 2025-09-15 18:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('full_name', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('cpf_cnpj', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve ter 11 dígitos ou CNPJ deve ter 14 dígitos', regex='^\\d{11}$|^\\d{14}$')], verbose_name='CPF/CNPJ')),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message='Número de telefone deve estar no formato: "+999999999". Até 15 dígitos permitidos.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefone')),
                ('user_type', models.CharField(choices=[('admin', 'Administrador'), ('customer', 'Cliente'), ('driver', 'Motorista')], default='customer', max_length=10, verbose_name='Tipo de Usuário')),
                ('street_address', models.CharField(max_length=255, verbose_name='Endereço')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=100, verbose_name='Estado')),
                ('postal_code', models.CharField(max_length=10, verbose_name='CEP')),
                ('country', models.CharField(default='Brasil', max_length=100, verbose_name='País')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('driver_license', models.CharField(blank=True, max_length=20, null=True, verbose_name='CNH')),
                ('vehicle_plate', models.CharField(blank=True, max_length=10, null=True, verbose_name='Placa do Veículo')),
                ('vehicle_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='Modelo do Veículo')),
                ('preferred_payment_method', models.CharField(blank=True, max_length=50, null=True, verbose_name='Método de Pagamento Preferido')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil do Usuário',
                'verbose_name_plural': 'Perfis dos Usuários',
            },
        ),
    ]
